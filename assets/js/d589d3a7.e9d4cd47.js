"use strict";(self.webpackChunkcormo_doc=self.webpackChunkcormo_doc||[]).push([[162],{6443:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=t(5893),s=t(1151);const r={id:"getting-started",title:"Getting Started"},i=void 0,c={id:"getting-started",title:"Getting Started",description:"CORMO is an ORM framework for Node.js.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/cormo/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/croquiscom/cormo/tree/main/doc/docs/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started"},sidebar:"docs",next:{title:"Define Connection",permalink:"/cormo/docs/define-connection"}},a={},l=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"CORMO is an ORM framework for Node.js."}),"\n",(0,o.jsx)(n.p,{children:"Currently supports:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"multi-DB: MySQL, MongoDB, SQLite3, PostgreSQL"}),"\n",(0,o.jsx)(n.li,{children:"constraints"}),"\n",(0,o.jsx)(n.li,{children:"validations"}),"\n",(0,o.jsx)(n.li,{children:"associations"}),"\n",(0,o.jsx)(n.li,{children:"geospatial query"}),"\n",(0,o.jsx)(n.li,{children:"callbacks"}),"\n",(0,o.jsx)(n.li,{children:"aggregation"}),"\n",(0,o.jsx)(n.li,{children:"nested column"}),"\n",(0,o.jsx)(n.li,{children:"transactions"}),"\n",(0,o.jsx)(n.li,{children:"schema migration"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(n.p,{children:["You should install the CORMO module and drivers for databases you want.\n(",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/mysql2",children:"mysql2"})," or ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/mysql",children:"mysql"})," for MySQL. ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/mongodb",children:"mongodb"})," for MongoDB. ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/sqlite3",children:"sqlite3"})," for SQLite3. ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/pg",children:"pg"})," for PostgreSQL.)"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ npm install cormo mysql2\n"})}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(n.p,{children:"Define a connection and models like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import * as cormo from 'cormo';\n\nconst connection = new cormo.MySQLConnection({ database: 'test' });\n\n@cormo.Model()\nclass User extends cormo.BaseModel {\n  @cormo.Column({ type: String })\n  name?: string;\n\n  @cormo.Column({ type: cormo.types.Integer })\n  age?: number;\n}\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var o=t(7294);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);